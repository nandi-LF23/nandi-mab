<pre>

<?php
require 'vendor/autoload.php';
$client = new GuzzleHttp\Client(['verify' => false ]);
$res = $client->request('POST', 'https://glds.ingenu.com/config/v1/session', [

        'headers' => ['username' => 'ag02@liquidfibre.com', 'password'=>'LFAG02p@ss']

]);

$body = $res->getBody();

$body = json_decode($body);



require_once('db.php');

    $db = new db();

$sql = 'SELECT * FROM node_data_meters ORDER BY idwm DESC LIMIT 1';
$stmt = $db->unprepared_query( $sql );
$row = $stmt->fetch(PDO::FETCH_ASSOC);
//echo $body->token;
$request = $client->request('GET','https://glds.ingenu.com/data/v1/receive/'.$row['message_id'], [
        'headers' => ['Authorization' => $body->token, 'Content-Type' => 'application/json']
]);
$body = $request->getBody();

$body = json_decode($body);
/*
for($i=0;sizeof($body->uplinks)>$i;$i++)
{
if($body->uplinks[$i]->datagramUplinkEvent->nodeId == $_GET['nodeid']) {
  print_r(  $body->uplinks[$i]); }
}
*/

for($j=0;sizeof($body->uplinks)>$j;$j++)
{


 // print_r(  $body->uplinks[$i]);

$line = bin2hex(base64_decode($body->uplinks[$j]->datagramUplinkEvent->payload));
  if (strlen($line)==52) {





        $EpochTimeStamp = substr($line,4,8);
    //$EpochTimeStamp = '2118f45a';


    $EpochTimeStamp = hexdec(substr($EpochTimeStamp,6,2).substr($EpochTimeStamp,4,2).substr($EpochTimeStamp,2,2).substr($EpochTimeStamp,0,2));
                $dataDate = date("Y-m-d H:i:s",$EpochTimeStamp);

$date1 = date("Y-m-d H:i:s", strtotime('-72 hours', time()));;
$date2 = date("Y-m-d H:i:s", strtotime('+72 hours', time()));;

if(($dataDate > $date1)&&($dataDate < $date2)){
               
 

$sql_1 = 'SELECT COUNT(*) as total FROM node_data_meters WHERE message_id = \''.$body->uplinks[$j]->messageId.'\'';
//echo $sql_1;
$stmt_1 = $db->unprepared_query( $sql_1 );
//print_r($stmt_1);
$row_1 = $stmt_1->fetch(PDO::FETCH_ASSOC);
if ($row_1['total']==0)
{

$sql = 'INSERT into node_data_meters (date_time,node_id,batt_volt,message_id, deg_c, power_state, pulse_1, pulse_2, state_of_measure_1, state_of_measure_2, pulse_1_mA, pulse_2_mA,ultrasonic)';

$sql .= ' VALUES (\''.$dataDate.'\',\''.$body->uplinks[$j]->datagramUplinkEvent->nodeId;
$sql .= '\',\''.hexdec(substr($line,14,2).substr($line,12,2));
$sql .= '\',\''.$body->uplinks[$j]->messageId;


$sql .= '\',\''.hexdec(substr($line,16,2));
$sql .= '\',\''.hexdec(substr($line,18,2));
$sql .= '\',\''.hexdec(substr($line,26,2).substr($line,24,2).substr($line,22,2).substr($line,20,2));
$sql .= '\',\''.hexdec(substr($line,34,2).substr($line,32,2).substr($line,30,2).substr($line,28,2));
$sql .= '\',\''.hexdec(substr($line,36,2));
$sql .= '\',\''.hexdec(substr($line,38,2));
$sql .= '\',\''.hexdec(substr($line,42,2).substr($line,40,2));
$sql .= '\',\''.hexdec(substr($line,46,2).substr($line,44,2));
$sql .= '\',\''.hexdec(substr($line,50,2).substr($line,48,2));
/*

echo '<td>'.hexdec(substr($line,26,2).substr($line,24,2).substr($line,22,2).substr($line,20,2)).'</td>';
                echo '<td>'.hexdec(substr($line,34,2).substr($line,32,2).substr($line,30,2).substr($line,28,2)).'</td>';
                //state of measurement
                echo '<td>'.substr($line,36,2).'</td>';
                echo '<td>'.substr($line,38,2).'</td>';
                //Current sens input
                echo '<td>'.hexdec(substr($line,42,2).substr($line,40,2)).'</td>';
                echo '<td>'.hexdec(substr($line,46,2).substr($line,44,2)).'</td>';
                //ultrasonic range measurement
                echo '<td>'.hexdec(substr($line,50,2).substr($line,48,2)).'</td>';

                */

}

$sql .= '\')';
//echo $sql;

$stmt = $db->unprepared_query( $sql );
echo 'inserted a row'. PHP_EOL;			
			
                        //print_r($stmt);
 } }}
